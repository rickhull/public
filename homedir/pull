#!/bin/bash

dir=$1
mode=$2

copy_home_file() {
  if [[ -f $HOME/$1 ]]; then
    cp $HOME/$1 $1
  else
    echo "$HOME/$1 is not a file"
    return 1
  fi
}

if [[ -z "$dir" ]]; then
  echo "please provide a dir"
  exit 1
else
  if [[ ! -d $dir ]]; then
    if test -f $dir && copy_home_file $dir && echo "copied $HOME/$dir"; then
      # user specified only a single file, and so we copied it; now exit
      exit 0
    else
      echo "cannot find $dir or a problem with $HOME/$dir"
      exit 1
    fi
  fi
  if [[ ! -d $HOME/$dir ]]; then
    echo "cannot find $HOME/$dir"
    exit 1
  fi
fi

# mode=update means that we will only consider what's in the repo; we will
# never add files to the repo in this mode
# mode=add means that we will add everything from $HOME/$dir to the repo; this
# is useful sometimes but not often; often the host system has way more junk
# than we want in the repo
if [[ -z "$mode" ]]; then mode=update; fi
if [[ $mode != add && $mode != update ]]; then
  echo "$mode is not a valid mode; use add or update"
fi

if [[ $mode == update ]]; then
  # only pull in stuff that already exists
  for entry in $dir/*; do
    echo "found $entry"
    if [[ -f $entry ]]; then
      copy_home_file $entry && echo "copied $HOME/$entry"
    elif [[ -d $entry ]]; then
      if [[ -d $HOME/$entry ]]; then
        # update existing files
        for file in $entry/*; do
          test -f $file && copy_home_file $file && echo "copied $HOME/$file"
        done
      else
        echo "$entry is a dir but $HOME/$entry is not"
      fi
    else
      echo "$entry is neither directory nor file"
    fi
  done
elif [[ $mode == add ]]; then
  echo "cp -R $HOME/$dir $dir/"
  cp -R $HOME/$dir $dir/
  echo "DONE"
fi
