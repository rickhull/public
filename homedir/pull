#!/bin/bash

#
# basic arg validation
#

dir=$1
mode=$2

test -z $dir && echo "please provide a dir" && exit 1

# mode=update means that we will only consider what already exists in the repo
# We will never add files to the repo in this mode.
# mode=add means that we will add everything from $HOME/$dir to the repo; this
# is useful sometimes but not often; often the host system has way more junk
# than we want in the repo
case $mode in
  add|update)
    true
    ;;
  "")
    mode=update
    ;;
  *)
    echo "mode=$mode invalid; use add or update"
    exit 1
    ;;
esac

# we've already validated that $1 is a file and we want to overwrite it
# e.g. CWD=~/src/public/homedir $1=.config/tint2/launcher
copy_home_file() {
  if [[ ! -f $HOME/$1 ]]; then echo "$HOME/$1 is not a file" && return 1; fi
  echo "copying $HOME/$1"
  cp $HOME/$1 $1
}

#
# extended $dir validation
#

if [[ ! -d $dir ]]; then
  test -f $dir && copy_home_file $dir && exit 0
  echo "cannot find $dir or a problem with $HOME/$dir" && exit 1
elif [[ ! -d $HOME/$dir ]]; then echo "$HOME/$dir is not a dir" && exit 1; fi

#
# perform the pull
#

if [[ $mode == update ]]; then
  # only pull in stuff that already exists
  for entry in $dir/*; do
    if [[ -f $entry ]]; then
      copy_home_file $entry
    elif [[ -d $entry ]]; then
      echo "subdir:  $entry"
      if [[ -d $HOME/$entry ]]; then
        for file in $entry/*; do test -f $file && copy_home_file $file; done
      else
        echo "$HOME/$entry is not a dir"
      fi
    else
      echo "$entry is neither directory nor file"
    fi
  done
elif [[ $mode == add ]]; then
  echo "cp -R $HOME/$dir $dir/"
  cp -R $HOME/$dir $dir/
  echo "DONE"
fi
