#!/bin/bash

# (selectively) copy a dir structure from a git repo to the host system
# we copy files and dirs
# if the destination dir doesn't exist, just cp -R the whole thing
# if the destination dir exists, then look at the files within
# if the destination file exists, only overwrite if mode == update
# otherwise copy the file into place

dir=$1
mode=$2

push_file() {
  local file=$1
  if [[ -z "$file" || ! -f $file ]]; then
    echo "bad input: $file"
    return 1
  fi

  if [[ -f $HOME/$file ]]; then
    echo "file exists: $HOME/$file"
    if [[ $mode == update ]]; then
      echo "overwriting $HOME/$file because mode=update"
      cp $file $HOME/$file
    fi
  else
    echo "creating $HOME/$file"
    cp $file $HOME/$file
  fi
}

if [[ -z "$dir" ]]; then
  echo "please provide a dir"
  exit 1
elif [[ ! -d $dir ]]; then
  if [[ -f $dir ]]; then
    # ok, just a single file, we can handle this
    push_file $dir
    exit 0
  else
    echo "cannot find $dir"
    exit 1
  fi
fi
if [[ -z "$mode" ]]; then mode=add; fi

# copy files from source dir to destination within $HOME
# only overwrite if $mode == update
push_files() {
  if [[ -z "$1" || ! -d $1 ]]; then
    echo "bad input: $1"
    return 1
  fi

  # selectively copy files
  for file in $1/*; do
    if [[ -f $file ]]; then
      echo "considering $file"
      push_file $file
    fi
  done
}

if [[ ! -d $HOME/$dir ]]; then
  # just copy everything
  echo "creating $HOME/$dir"
  cp -R $dir $HOME/$dir
else
  # selectively push files within $dir
  echo "$HOME/$dir exists"
  push_files $dir add

  # push one level of subdirs within $dir
  for entry in $dir/*; do
    if [[ -d $entry ]]; then
      if [[ -d $HOME/$entry ]]; then
        # selectively push files within $entry
        echo "$HOME/$entry exists"
        push_files $entry add
      else
        echo "creating $HOME/entry"
        cp -R $entry $HOME/$entry
      fi
    fi
  done
fi
